clear;clc;

load("Turbofan.mat")

%% Design Variables
m_dot_f = 3;
m_dot_t = 93;     % mass flow, kg/s, air plus fuel
m_dot_c = 100;  % compressor mass flow, just air
rpm = 8770;     % rpm
ang_vel = rpm * 2*pi / 60;

T0_2c = 364.987;
T0_3c = 771;
T0_1m = 1500;    % turbine inlet total temperature, K, is T0_4 in cycle station numbers
P0_1m = 1500000; % turbine inlet total pressure, Pa    is P0_4 in cycle station numbers

r_mean_c = 0.4; % Comrpessor pitchline radius, meters

m_dot_cool = 10;    % Cooling air bleedoff mass flow, kg/s
T0_cool = 704;      % Cooling air temperature, kelvin
P0_cool = 1500000;  % Cooling air pressure, Pa

M_0 = 0;
P0_0m = 101000;
T0_0m = 289.15;

Cp_c = 1004.5;
Cp_t = 1243.67;
gamma_c = 1.40;
gamma_t = 1.30;
R_t = (gamma_t-1)*Cp_t/gamma_t;

eta_m = 0.996;
ep = 0.1;

%% Here we go
power_c = m_dot_c*Cp_c*(T0_3c-T0_2c);
power_t = power_c/eta_m;

syms T0_5_sym;
T0_5m = double(solve(power_t == m_dot_c*((1-ep)*Cp_t*(T0_1m-T0_5_sym) + ep*Cp_c*(T0_cool-T0_5_sym)), T0_5_sym));
% T0_5m = T0_4 - power_t/(m_dot_t*Cp_t);
deltaT = T0_1m-T0_5m;

Mc_2m = 1.1;
alpha_1m = 0; % assume purely axial inlet velocity
alpha_2m = 60;

T_2m = T0_1m/(1 + (gamma_t-1)/2*Mc_2m^2);
a_2m = sqrt(gamma_t*R_t*T_2m);
C_2m = Mc_2m * a_2m;

Ctheta_2m = C_2m * sind(alpha_2m);
z_2m = C_2m * cosd(alpha_2m);

z_1m = z_2m;    % assume constant axial velocity
z_3m = z_2m;    % assume constant axial velocity
C_1m = z_2m/cosd(alpha_1m);
Ctheta_1m = C_1m * sind(alpha_1m);

T0_2m = T0_1m;
T_1m = T0_2m - C_1m^2/(2*Cp_t);
a_1m = sqrt(gamma_t*R_t*T_1m);
Mc_1m = C_1m/a_1m;
Mz_1m = z_1m/a_1m;

zweifel = 1;
solidityZweifel_s = 2*cosd(alpha_2m)/cosd(alpha_1m)*sind(alpha_2m - alpha_1m);

Ctheta_mean = (Ctheta_1m + Ctheta_2m)/2;  % Initial approximation of average swirl, assuming swirl-free exit
alpha_2mean = atand(Ctheta_mean/z_2m);
% optimalSolidity_s = solidityZweifel_s/cosd(alpha_2mean);
optimalSolidity_s = 2;

o_s_ratio = cosd(alpha_2m)/AAstar_ratio(Mc_2m, gamma_t);

U_2m = ang_vel * r_mean_c;

Wtheta_2m = Ctheta_2m - U_2m;

Mw_3m = 0.8;
Wtheta_3m = -sqrt( (Mw_3m^2*(a_2m^2+(gamma_t-1)*Wtheta_2m^2/2)-z_2m^2) / (1+(gamma_t-1)*Mw_3m^2/2) );
Ctheta_3m = U_2m + Wtheta_3m;
W_2m = sqrt(z_2m^2 + Wtheta_2m^2);
W_3m = sqrt(z_3m^2 + Wtheta_3m^2);
C_3m = sqrt(z_3m^2 + Ctheta_3m^2);

beta_2m = acosd(z_2m/W_2m);
beta_3m = -acosd(z_3m/W_3m);
alpha_3m = atand(Ctheta_3m/z_3m);

a_3m = W_3m/Mw_3m;
Mw_2m = W_2m/a_2m;

degR_1m = 1 - (Ctheta_2m + Ctheta_3m)/(2*U_2m);

T0_2Rm = T_2m + W_2m^2/(2*Cp_t);

profileLoss_s = 0.06;

P_1m = P0_1m * (1 + (gamma_t-1)/2*Mc_1m^2)^(-gamma_t/(gamma_t-1));
P0_2m = -profileLoss_s*(P0_1m - P_1m)+P0_1m;

P_2m = P0_2m * (1 + (gamma_t-1)/2*Mc_2m^2)^(-gamma_t/(gamma_t-1));
P0_2Rm = P_2m * (1 + (gamma_t-1)/2*Mw_2m^2)^(gamma_t/(gamma_t-1));
T0_3m = T0_2m + U_2m*(Ctheta_3m-Ctheta_2m)/Cp_t;
T_3m = T0_3m - C_3m^2/(2*Cp_t);
T0_3Rm = T_3m + W_3m^2/(2*Cp_t);
a_3m = sqrt(gamma_t*R_t*T_3m);
Mc_3m = C_3m/a_3m;

profileLoss_r = 0.08;
P0_3Rm = -profileLoss_r*(P0_2Rm - P_2m)+P0_2Rm;
P_3m = P0_3Rm * (1 + (gamma_t-1)/2*Mw_3m^2)^(-gamma_t/(gamma_t-1));
P0_3m = P_3m * (1 + (gamma_t-1)/2*Mc_3m^2)^(gamma_t/(gamma_t-1));

% Rotor solidity
optimalZweifel = 1.0;
solidityZweifel_r = 2*cosd(beta_3m)/cosd(beta_2m)*sind(beta_2m - beta_3m)/optimalZweifel;
Wtheta_mean = (Wtheta_2m + Wtheta_3m)/2;
beta_3mean = atand(Wtheta_mean/z_3m);
optimalSolidity_r = solidityZweifel_r/cosd(beta_3mean);

% Rotor deviation angle
devAng = (beta_3m - beta_2m)/(8*optimalSolidity_r);

% Power
P_spec = U_2m*(Ctheta_2m-Ctheta_3m);
P = P_spec * m_dot_t;

function AAstar = AAstar_ratio(M, gamma)
    AAstar = ((gamma+1)/2) ^ (-(gamma + 1)/(2*(gamma-1))) * (1 + (gamma-1)/2*M^2) ^ ((gamma + 1)/(2*(gamma-1))) / M ;
end